{
	"info": {
		"_postman_id": "d086c912-1e4a-4a85-b2c7-9db982902606",
		"name": "WhatBytes_Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45807552",
		"_collection_link": "https://hardeepnain.postman.co/workspace/Hardeep-Nain's-Workspace~604cd97b-135b-472a-806c-656b030f4a27/collection/45807552-d086c912-1e4a-4a85-b2c7-9db982902606?action=share&source=collection_link&creator=45807552"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "signup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Test User\",\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"test1234\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "## Register User Endpoint\n\nThis endpoint allows new users to register by providing their personal information. Upon successful registration, a user account is created, and the user details are returned in the response.\n\n### Request\n\n- **Method**: POST\n    \n- **URL**: `{{baseUrl}}/api/auth/register`\n    \n- **Content-Type**: application/json\n    \n\n#### Request Body Parameters\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | string | The full name of the user. |\n| email | string | The email address of the user. |\n| password | string | The password for the user account. |\n\n**Example Request Body:**\n\n``` json\n{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"test1234\"\n}\n\n ```\n\n### Response\n\n- **Status Code**: 201 Created\n    \n- **Content-Type**: application/json\n    \n\n#### Response Body\n\nThe response will contain a message and the user object with the following structure:\n\n| Key | Type | Description |\n| --- | --- | --- |\n| message | string | A message indicating the result of the registration. |\n| user | object | An object containing the registered user's details. |\n| user.id | integer | The unique identifier for the user. |\n| user.name | string | The name of the registered user. |\n| user.email | string | The email of the registered user. |\n\n**Example Response:**\n\n``` json\n{\n  \"message\": \"\",\n  \"user\": {\n    \"id\": 0,\n    \"name\": \"\",\n    \"email\": \"\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the email provided is unique and valid to avoid registration errors.\n    \n- The password should meet the application's security requirements."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Test User\",\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"test1234\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "104"
								},
								{
									"key": "ETag",
									"value": "W/\"68-G3c0XR105nu85180M/hXhEtIr5Y\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 04:00:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User registered successfully\",\n    \"user\": {\n        \"id\": 1,\n        \"name\": \"Test User\",\n        \"email\": \"test@example.com\"\n    }\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Test User\",\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"test1234\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "252"
								},
								{
									"key": "ETag",
									"value": "W/\"fc-zN+52gq8JFwiXo66dRmQ9PwT1UQ\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 04:04:02 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Email already registered\"\n}"
						}
					]
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@example.com\",\r\n    \"password\": \"test1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "## Login Endpoint\n\nThis endpoint is used to authenticate a user by logging them in with their credentials. It expects a POST request containing the user's email and password.\n\n### Request\n\n- **URL:** `{{baseUrl}}/api/auth/login`\n    \n- **Method:** POST\n    \n- **Content-Type:** application/json\n    \n\n#### Request Body\n\nThe request body should be a JSON object with the following parameters:\n\n- **email** (string): The email address of the user attempting to log in.\n    \n- **password** (string): The password associated with the user's account.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"email\": \"test@example.com\",\n  \"password\": \"test1234\"\n}\n\n ```\n\n### Response\n\nUpon successful authentication, the server responds with a status code of 200 and a JSON object containing the following data:\n\n- **token** (string): A token that can be used for subsequent authenticated requests.\n    \n\n**Example Response:**\n\n``` json\n{\n  \"token\": \"\"\n}\n\n ```\n\n### Response Visualization\n\nThe response is visualized in JSON format, which allows for easy reading and parsing of the returned token. The token is essential for maintaining the user's session and should be securely stored for future requests."
					},
					"response": [
						{
							"name": "sucess",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"test1234\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "155"
								},
								{
									"key": "ETag",
									"value": "W/\"9b-ch+DXJCJbTgiXyQHXgQ7IJ2VBpE\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 04:07:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"<Your_token_here>\"\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"wrongpass\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "158"
								},
								{
									"key": "ETag",
									"value": "W/\"9e-8LbGO6/K5jjiwzEIn93UV8JesNA\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 04:09:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid credentials\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "patient",
			"item": [
				{
					"name": "add patient",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"John Doe\",\r\n  \"age\": 45,\r\n  \"disease\": \"Diabetes\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/patients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"patients"
							]
						},
						"description": "## Add Patient\n\nThis endpoint allows you to add a new patient to the system. It accepts patient details in the request body and returns the created patient's information upon successful execution.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{baseUrl}}/api/patients`\n\n**Request Body (JSON):**\n\n``` json\n{\n  \"name\": \"string\",    // The name of the patient\n  \"age\": \"integer\",    // The age of the patient\n  \"disease\": \"string\"  // The disease the patient is suffering from\n}\n\n ```\n\n### Response\n\n**Status Code:** 201 Created  \n**Content-Type:** application/json\n\n**Response Body:**\n\n``` json\n{\n  \"message\": \"string\", // A message indicating the result of the operation\n  \"patient\": {\n    \"id\": \"integer\",    // The unique identifier for the patient\n    \"name\": \"string\",   // The name of the patient\n    \"age\": \"integer\",   // The age of the patient\n    \"disease\": \"string\",// The disease of the patient\n    \"userId\": \"integer\",// The ID of the user associated with the patient\n    \"updatedAt\": \"string\", // Timestamp of the last update\n    \"createdAt\": \"string\"  // Timestamp of when the patient was created\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the request body contains valid data types for each field.\n    \n- The `id`, `userId`, `updatedAt`, and `createdAt` fields in the response will be populated by the system upon successful creation of the patient record.\n    \n- The `message` field in the response can be used for additional information regarding the operation."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"John Doe\",\r\n  \"age\": 45,\r\n  \"disease\": \"Diabetes\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/patients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"patients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "185"
								},
								{
									"key": "ETag",
									"value": "W/\"b9-aJr91tBHGdgr9qaviXUtKBpk7FI\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:43:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Patient created\",\n    \"patient\": {\n        \"id\": 1,\n        \"name\": \"John Doe\",\n        \"age\": 45,\n        \"disease\": \"Diabetes\",\n        \"userId\": 1,\n        \"updatedAt\": \"2025-06-19T06:43:51.531Z\",\n        \"createdAt\": \"2025-06-19T06:43:51.531Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "all patients",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/patients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"patients"
							]
						},
						"description": "\n### Retrieve Patients\n\nThis endpoint retrieves a list of patients from the system.\n\n- **Method**: `GET`\n- **Endpoint**: `{{baseUrl}}/api/patients`\n\n#### Request Parameters\nThis endpoint does not require any request parameters.\n\n#### Response Format\nOn a successful request, the server responds with a status code of `200` and a JSON object containing an array of patients. Each patient object includes the following fields:\n\n- `id` (integer): The unique identifier for the patient.\n- `name` (string): The name of the patient.\n- `age` (integer): The age of the patient.\n- `disease` (string): The disease associated with the patient.\n- `userId` (integer): The identifier for the user associated with the patient record.\n- `createdAt` (string): The timestamp when the patient record was created.\n- `updatedAt` (string): The timestamp when the patient record was last updated.\n\n#### Example Response\n```json\n{\n  \"patients\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"age\": 0,\n      \"disease\": \"\",\n      \"userId\": 0,\n      \"createdAt\": \"\",\n      \"updatedAt\": \"\"\n    }\n  ]\n}\n```\n"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/patients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"patients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "160"
								},
								{
									"key": "ETag",
									"value": "W/\"a0-O8S7x9EQZEW7YdGpNHb00eSNCd0\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:47:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"patients\": [\n        {\n            \"id\": 1,\n            \"name\": \"John Doe\",\n            \"age\": 45,\n            \"disease\": \"Diabetes\",\n            \"userId\": 1,\n            \"createdAt\": \"2025-06-19T06:43:51.000Z\",\n            \"updatedAt\": \"2025-06-19T06:43:51.000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "patient by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/patients/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"patients",
								"1"
							]
						},
						"description": "\n## Get Patient Information\n\nThis endpoint retrieves detailed information about a specific patient using their unique identifier.\n\n### Request\n\n- **Method**: `GET`\n- **URL**: `{{baseUrl}}/api/patients/{id}`\n- **Path Parameter**:\n  - `id` (required): The unique identifier of the patient whose information is to be retrieved.\n\n### Response\n\nUpon a successful request, the response will have a status code of `200` and will return a JSON object containing the patient's details. The structure of the response is as follows:\n\n```json\n{\n  \"patient\": {\n    \"id\": <integer>,          // Unique identifier for the patient\n    \"name\": <string>,        // Name of the patient\n    \"age\": <integer>,        // Age of the patient\n    \"disease\": <string>,     // Medical condition of the patient\n    \"userId\": <integer>,     // Identifier for the user associated with the patient\n    \"createdAt\": <string>,   // Timestamp when the patient record was created\n    \"updatedAt\": <string>    // Timestamp when the patient record was last updated\n  }\n}\n```\n\n### Example Response\n\n```json\n{\n  \"patient\": {\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"age\": 30,\n    \"disease\": \"Hypertension\",\n    \"userId\": 123,\n    \"createdAt\": \"2023-01-01T00:00:00Z\",\n    \"updatedAt\": \"2023-01-10T00:00:00Z\"\n  }\n}\n```\n\nThis endpoint is useful for applications that need to display or process patient information based on their ID.\n"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/patients/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "157"
								},
								{
									"key": "ETag",
									"value": "W/\"9d-GWnozUWKl0GwpBFyZ4tu9h2eZB4\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:50:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"patient\": {\n        \"id\": 1,\n        \"name\": \"John Doe\",\n        \"age\": 45,\n        \"disease\": \"Diabetes\",\n        \"userId\": 1,\n        \"createdAt\": \"2025-06-19T06:43:51.000Z\",\n        \"updatedAt\": \"2025-06-19T06:43:51.000Z\"\n    }\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/patients/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"patients",
										"2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "241"
								},
								{
									"key": "ETag",
									"value": "W/\"f1-/UAw6A8FxmsCcC894WzBiH49AR0\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:52:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Patient not found\"\n}"
						}
					]
				},
				{
					"name": "update patient by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"age\": 50,\r\n  \"disease\": \"High Blood Pressure\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/patients/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"patients",
								"1"
							]
						},
						"description": "## Update Patient Information\n\nThis endpoint allows you to update the details of a specific patient identified by their unique ID. The request modifies the patient's information such as age and disease.\n\n### Request\n\n- **Method**: PUT\n    \n- **URL**: `{{baseUrl}}/api/patients/{id}`\n    \n\n#### Request Body\n\nThe request body must be in JSON format and should include the following parameters:\n\n- **age** (integer): The age of the patient. This should be a positive integer representing the patient's current age.\n    \n- **disease** (string): A description of the patient's disease or medical condition. This should be a string that provides relevant information about the patient's health status.\n    \n\n##### Example Request Body:\n\n``` json\n{\n  \"age\": 50,\n  \"disease\": \"High Blood Pressure\"\n}\n\n ```\n\n### Response\n\nUpon a successful update, the server will respond with a JSON object containing a message and the updated patient information.\n\n#### Response Structure\n\n- **message** (string): A message indicating the result of the operation. This may be empty or contain information about the update.\n    \n- **patient** (object): An object containing the details of the updated patient:\n    \n    - **id** (integer): The unique identifier of the patient.\n        \n    - **name** (string): The name of the patient.\n        \n    - **age** (integer): The updated age of the patient.\n        \n    - **disease** (string): The updated disease or medical condition of the patient.\n        \n    - **userId** (integer): The ID of the user associated with the patient.\n        \n    - **createdAt** (string): Timestamp of when the patient record was created.\n        \n    - **updatedAt** (string): Timestamp of when the patient record was last updated.\n        \n\n##### Example Response:\n\n``` json\n{\n  \"message\": \"\",\n  \"patient\": {\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"age\": 50,\n    \"disease\": \"High Blood Pressure\",\n    \"userId\": 123,\n    \"createdAt\": \"2023-01-01T00:00:00Z\",\n    \"updatedAt\": \"2023-01-01T00:00:00Z\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the patient ID in the URL corresponds to an existing patient record for the update to be successful.\n    \n- The response will reflect the latest information after the update."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"age\": 50,\r\n  \"disease\": \"High Blood Pressure\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/patients/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "196"
								},
								{
									"key": "ETag",
									"value": "W/\"c4-ML2mRbskV/CVF3XhSa2+ICOGi/o\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:54:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Patient updated\",\n    \"patient\": {\n        \"id\": 1,\n        \"name\": \"John Doe\",\n        \"age\": 50,\n        \"disease\": \"High Blood Pressure\",\n        \"userId\": 1,\n        \"createdAt\": \"2025-06-19T06:43:51.000Z\",\n        \"updatedAt\": \"2025-06-19T06:54:15.691Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "delete patient by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/patients/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"patients",
								"1"
							]
						},
						"description": "## Delete Patient Record\n\nThis endpoint is used to delete a patient record identified by a unique ID. In this case, the ID is `1`. When a DELETE request is made to this endpoint, the specified patient record will be removed from the system.\n\n### Request\n\n- **Method**: DELETE\n    \n- **Endpoint**: `{{baseUrl}}/api/patients/{id}`\n    \n- **Path Parameter**:\n    \n    - `id` (integer): The unique identifier of the patient to be deleted. In this example, the ID is `1`.\n        \n\n### Response\n\nUpon successful deletion of the patient record, the server will respond with a status code of `200` and a JSON object containing a message. The structure of the response is as follows:\n\n- **Status Code**: 200\n    \n- **Content-Type**: application/json\n    \n- { \"message\": \"\"}\n    \n\nThe message field may contain additional information about the deletion process, but in this case, it is an empty string.\n\n### Notes\n\n- Ensure that the patient ID provided in the request is valid and exists in the system before making the DELETE request.\n    \n- This operation is irreversible; once a patient record is deleted, it cannot be recovered."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/patients/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "29"
								},
								{
									"key": "ETag",
									"value": "W/\"1d-vHBMKM0sYlWjSoJiYFJwmlTxiL0\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:56:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Patient deleted\"\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/patients/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"patients",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "241"
								},
								{
									"key": "ETag",
									"value": "W/\"f1-I88YZVizosJVj2C9TFu5qF7pkO8\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 06:57:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Patient not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "doctor",
			"item": [
				{
					"name": "add doctor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Dr. Alice Gupta\",\r\n  \"specialization\": \"Cardiologist\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/doctors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"doctors"
							]
						},
						"description": "### Add Doctor\n\nThis endpoint allows you to add a new doctor to the system.\n\n- **Method**: `POST`\n    \n- **Endpoint**: `{{baseUrl}}/api/doctors`\n    \n\n#### Request Body\n\nThe request body should be in JSON format and include the following parameters:\n\n- **name** (string): The name of the doctor.\n    \n- **specialization** (string): The area of specialization for the doctor.\n    \n\n**Example Request Body**:\n\n``` json\n{\n  \"name\": \"Dr. Alice Gupta\",\n  \"specialization\": \"Cardiologist\"\n}\n\n ```\n\n#### Response\n\nUpon a successful request, you will receive a response with a status code of `201 Created`. The response will be in JSON format and will include the following structure:\n\n- **message** (string): A message indicating the result of the operation (may be empty).\n    \n- **doctor** (object): An object containing details about the newly created doctor:\n    \n    - **id** (integer): The unique identifier for the doctor.\n        \n    - **name** (string): The name of the doctor.\n        \n    - **specialization** (string): The specialization of the doctor.\n        \n    - **userId** (integer): The identifier of the user associated with the doctor.\n        \n    - **updatedAt** (string): Timestamp of when the doctor information was last updated.\n        \n    - **createdAt** (string): Timestamp of when the doctor was created.\n        \n\n**Example Response**:\n\n``` json\n{\n  \"message\": \"\",\n  \"doctor\": {\n    \"id\": 0,\n    \"name\": \"\",\n    \"specialization\": \"\",\n    \"userId\": 0,\n    \"updatedAt\": \"\",\n    \"createdAt\": \"\"\n  }\n}\n\n ```"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Dr. Alice Gupta\",\r\n  \"specialization\": \"Cardiologist\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/doctors",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "192"
								},
								{
									"key": "ETag",
									"value": "W/\"c0-PkfAHqr3ja5739OSZZXR2xWn0Lo\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:13:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Doctor created\",\n    \"doctor\": {\n        \"id\": 1,\n        \"name\": \"Dr. Alice Gupta\",\n        \"specialization\": \"Cardiologist\",\n        \"userId\": 1,\n        \"updatedAt\": \"2025-06-19T08:13:56.224Z\",\n        \"createdAt\": \"2025-06-19T08:13:56.224Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "all doctors",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/doctors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"doctors"
							]
						},
						"description": "### API Endpoint: Get Doctors\n\n#### Purpose\n\nThis endpoint retrieves a list of doctors from the system. It provides essential information about each doctor, including their identification and specialization.\n\n#### Request Format\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/api/doctors`\n    \n\nThis endpoint does not require any request body or parameters.\n\n#### Response Structure\n\nUpon a successful request, the server responds with a status code of `200` and a JSON object containing the following structure:\n\n``` json\n{\n  \"doctors\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"specialization\": \"\",\n      \"userId\": 0,\n      \"createdAt\": \"\",\n      \"updatedAt\": \"\"\n    }\n  ]\n}\n\n ```\n\n- **doctors**: An array of doctor objects.\n    \n    - **id**: A unique identifier for the doctor.\n        \n    - **name**: The name of the doctor.\n        \n    - **specialization**: The area of expertise of the doctor.\n        \n    - **userId**: The identifier for the user associated with the doctor.\n        \n    - **createdAt**: Timestamp indicating when the doctor's record was created.\n        \n    - **updatedAt**: Timestamp indicating when the doctor's record was last updated.\n        \n\nThis endpoint is useful for applications that need to display or manage doctor information within their interface."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/doctors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"doctors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "168"
								},
								{
									"key": "ETag",
									"value": "W/\"a8-zNhspbUmt3pjMJMg1TSken4C3sg\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:15:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"doctors\": [\n        {\n            \"id\": 1,\n            \"name\": \"Dr. Alice Gupta\",\n            \"specialization\": \"Cardiologist\",\n            \"userId\": 1,\n            \"createdAt\": \"2025-06-19T08:13:56.000Z\",\n            \"updatedAt\": \"2025-06-19T08:13:56.000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "doctor by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/doctors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"doctors",
								"1"
							]
						},
						"description": "## Get Doctor Details\n\nThis endpoint retrieves the details of a specific doctor identified by their unique ID. The request is made using the HTTP GET method and is designed to return comprehensive information about the doctor, including their name, specialization, and associated user ID.\n\n### Request\n\n- **Method**: GET\n    \n- **Endpoint**: `{{baseUrl}}/api/doctors/{id}`\n    \n- **Path Parameter**:\n    \n    - `id` (integer): The unique identifier of the doctor whose details are to be fetched.\n        \n\n### Response\n\nUpon a successful request, the server responds with a status code of **200 OK** and a JSON object containing the doctor's details. The structure of the response is as follows:\n\n``` json\n{\n  \"doctor\": {\n    \"id\": 0,\n    \"name\": \"\",\n    \"specialization\": \"\",\n    \"userId\": 0,\n    \"createdAt\": \"\",\n    \"updatedAt\": \"\"\n  }\n}\n\n ```\n\n#### Response Fields\n\n- `doctor`: An object containing the following fields:\n    \n    - `id` (integer): The unique identifier of the doctor.\n        \n    - `name` (string): The name of the doctor.\n        \n    - `specialization` (string): The area of medical expertise of the doctor.\n        \n    - `userId` (integer): The ID of the user associated with the doctor.\n        \n    - `createdAt` (string): The timestamp of when the doctor was created in the system.\n        \n    - `updatedAt` (string): The timestamp of the last update made to the doctor's information.\n        \n\nThis endpoint is crucial for applications that need to display or utilize specific doctor information based on their ID."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/doctors/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "165"
								},
								{
									"key": "ETag",
									"value": "W/\"a5-aSgcXOy/FeNRLI5AADqA46U5Ga4\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:17:42 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"doctor\": {\n        \"id\": 1,\n        \"name\": \"Dr. Alice Gupta\",\n        \"specialization\": \"Cardiologist\",\n        \"userId\": 1,\n        \"createdAt\": \"2025-06-19T08:13:56.000Z\",\n        \"updatedAt\": \"2025-06-19T08:13:56.000Z\"\n    }\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/doctors/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"doctors",
										"2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "238"
								},
								{
									"key": "ETag",
									"value": "W/\"ee-AFQ9rddadBEVnoNkVvPpl/eLLFg\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:18:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Doctor not found\"\n}"
						}
					]
				},
				{
					"name": "update doctor by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"specialization\": \"Neurologist\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/doctors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"doctors",
								"1"
							]
						},
						"description": "\n### Update Doctor Specialization\n\nThis endpoint allows you to update the specialization of a doctor identified by their unique ID.\n\n#### Request\n\n- **Method:** PUT\n- **Endpoint:** `{{baseUrl}}/api/doctors/{id}`\n\n#### Path Parameters\n\n- **id** (required): The unique identifier of the doctor whose specialization you want to update. In the example provided, the ID is `1`.\n\n#### Request Body\n\nThe request body must be in JSON format and include the following parameter:\n\n- **specialization** (string): The new specialization for the doctor. For example, `\"Neurologist\"`.\n\n#### Example Request Body\n\n```json\n{\n  \"specialization\": \"Neurologist\"\n}\n```\n\n#### Response\n\nOn a successful update, the server responds with a status code of `200` and returns the following JSON structure:\n\n- **message**: A string that may contain additional information about the update operation.\n- **doctor**: An object containing the details of the updated doctor:\n  - **id**: The unique identifier of the doctor.\n  - **name**: The name of the doctor.\n  - **specialization**: The updated specialization of the doctor.\n  - **userId**: The ID of the user associated with the doctor.\n  - **createdAt**: The timestamp when the doctor was created.\n  - **updatedAt**: The timestamp when the doctor was last updated.\n\n#### Example Response\n\n```json\n{\n  \"message\": \"\",\n  \"doctor\": {\n    \"id\": 0,\n    \"name\": \"\",\n    \"specialization\": \"\",\n    \"userId\": 0,\n    \"createdAt\": \"\",\n    \"updatedAt\": \"\"\n  }\n}\n```\n\nThis structure ensures that you receive confirmation of the update along with the latest details of the doctor.\n"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"specialization\": \"Neurologist\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/doctors/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "191"
								},
								{
									"key": "ETag",
									"value": "W/\"bf-9/L1nuvjpakMCkH362xz4/GJGuo\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Doctor updated\",\n    \"doctor\": {\n        \"id\": 1,\n        \"name\": \"Dr. Alice Gupta\",\n        \"specialization\": \"Neurologist\",\n        \"userId\": 1,\n        \"createdAt\": \"2025-06-19T08:13:56.000Z\",\n        \"updatedAt\": \"2025-06-19T08:20:33.884Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "delete doctor by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/doctors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"doctors",
								"1"
							]
						},
						"description": "## DELETE /api/doctors/{id}\n\nThis endpoint is used to delete a specific doctor record from the system. The `{id}` in the URL should be replaced with the unique identifier of the doctor you wish to remove.\n\n### Request\n\n- **Method**: DELETE\n    \n- **URL**: `{{baseUrl}}/api/doctors/{id}`\n    \n- **Path Parameter**:\n    \n    - `id` (required): The unique identifier of the doctor to be deleted.\n        \n\n### Response\n\nUpon successful deletion of the doctor record, the API will respond with a JSON object containing a message.\n\n- **Response Format**:\n    \n    - { \"message\": \"\"}\n        \n\n### Notes\n\n- Ensure that the doctor ID provided in the request URL corresponds to an existing record. If the ID does not exist, the API may return an error response.\n    \n- The response message may be empty, indicating the operation was completed without issues."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/doctors/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"doctors",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "ETag",
									"value": "W/\"1c-6i4NEf1vsRm5a8hyCLFrooV5C+I\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:22:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Doctor deleted\"\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/doctors/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"doctors",
										"2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "270"
								},
								{
									"key": "ETag",
									"value": "W/\"10e-bTBsmUIk03SnNlaILXJJYv2rbVk\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:23:42 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Doctor not found or unauthorized\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "mapping",
			"item": [
				{
					"name": "assign doctor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"patientId\": 1,\r\n  \"doctorId\": 2\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mappings"
							]
						},
						"description": "\n## Add Mapping\n\nThis endpoint allows you to create a new mapping between a patient and a doctor.\n\n### HTTP Method\n`POST`\n\n### Endpoint\n`{{baseUrl}}/api/mappings`\n\n### Request Body\nThe request requires a JSON payload with the following parameters:\n\n- **patientId** (integer): The unique identifier for the patient.\n- **doctorId** (integer): The unique identifier for the doctor.\n\n#### Example Request Payload\n```json\n{\n  \"patientId\": 1,\n  \"doctorId\": 2\n}\n```\n\n### Response\nOn a successful request, the server will respond with a status code of `201 Created`. The response will be in JSON format and will include a message and the details of the created mapping.\n\n#### Response Format\n```json\n{\n  \"message\": \"\",\n  \"mapping\": {\n    \"id\": 0,\n    \"patientId\": 0,\n    \"doctorId\": 0,\n    \"updatedAt\": \"\",\n    \"createdAt\": \"\"\n  }\n}\n```\n\n### Notes\n- The `mapping` object in the response contains the details of the newly created mapping, including its unique `id`, the `patientId`, the `doctorId`, and timestamps for creation and updates.\n"
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"patientId\": 1,\r\n  \"doctorId\": 2\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mappings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "164"
								},
								{
									"key": "ETag",
									"value": "W/\"a4-KsDqVOFQ6kKjs+YV46gEw9KN3zI\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:48:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Doctor assigned to patient\",\n    \"mapping\": {\n        \"id\": 1,\n        \"patientId\": 1,\n        \"doctorId\": 2,\n        \"updatedAt\": \"2025-06-19T08:48:57.395Z\",\n        \"createdAt\": \"2025-06-19T08:48:57.395Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "all patient-doctors mappings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mappings"
							]
						},
						"description": "### API Endpoint: Get Mappings\n\nThis endpoint retrieves a list of mappings between patients and doctors. Each mapping includes details about the patient and the doctor associated with it.\n\n#### Request\n\n- **Method**: GET\n    \n- **URL**: `{{baseUrl}}/api/mappings`\n    \n\n#### Response\n\n- **Status Code**: 200\n    \n- **Content-Type**: application/json\n    \n\n#### Response Structure\n\nThe response will contain a JSON object with a key `mappings`, which is an array of mapping objects. Each mapping object includes the following fields:\n\n- `id`: Unique identifier for the mapping.\n    \n- `patientId`: Identifier for the associated patient.\n    \n- `doctorId`: Identifier for the associated doctor.\n    \n- `createdAt`: Timestamp of when the mapping was created.\n    \n- `updatedAt`: Timestamp of when the mapping was last updated.\n    \n- `patient`: An object containing details about the patient:\n    \n    - `id`: Unique identifier for the patient.\n        \n    - `name`: Name of the patient.\n        \n    - `age`: Age of the patient.\n        \n    - `disease`: Disease diagnosed for the patient.\n        \n    - `userId`: Identifier for the user associated with the patient.\n        \n    - `createdAt`: Timestamp of when the patient record was created.\n        \n    - `updatedAt`: Timestamp of when the patient record was last updated.\n        \n- `doctor`: An object containing details about the doctor:\n    \n    - `id`: Unique identifier for the doctor.\n        \n    - `name`: Name of the doctor.\n        \n    - `specialization`: Specialization of the doctor.\n        \n    - `userId`: Identifier for the user associated with the doctor.\n        \n    - `createdAt`: Timestamp of when the doctor record was created.\n        \n    - `updatedAt`: Timestamp of when the doctor record was last updated.\n        \n\nThis structured response allows clients to easily access and utilize the mapping information between patients and doctors."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mappings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1288"
								},
								{
									"key": "ETag",
									"value": "W/\"508-RZhPcMoywHC302v+3WkZzxx0/QI\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:51:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"mappings\": [\n        {\n            \"id\": 1,\n            \"patientId\": 1,\n            \"doctorId\": 2,\n            \"createdAt\": \"2025-06-19T08:48:57.000Z\",\n            \"updatedAt\": \"2025-06-19T08:48:57.000Z\",\n            \"patient\": {\n                \"id\": 1,\n                \"name\": \"John Doe\",\n                \"age\": 45,\n                \"disease\": \"Diabetes\",\n                \"userId\": 1,\n                \"createdAt\": \"2025-06-19T07:01:28.000Z\",\n                \"updatedAt\": \"2025-06-19T07:01:28.000Z\"\n            },\n            \"doctor\": {\n                \"id\": 2,\n                \"name\": \"Dr. Alice Gupta\",\n                \"specialization\": \"Cardiologist\",\n                \"userId\": 1,\n                \"createdAt\": \"2025-06-19T08:24:12.000Z\",\n                \"updatedAt\": \"2025-06-19T08:24:12.000Z\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"patientId\": 1,\n            \"doctorId\": 5,\n            \"createdAt\": \"2025-06-19T08:51:22.000Z\",\n            \"updatedAt\": \"2025-06-19T08:51:22.000Z\",\n            \"patient\": {\n                \"id\": 1,\n                \"name\": \"John Doe\",\n                \"age\": 45,\n                \"disease\": \"Diabetes\",\n                \"userId\": 1,\n                \"createdAt\": \"2025-06-19T07:01:28.000Z\",\n                \"updatedAt\": \"2025-06-19T07:01:28.000Z\"\n            },\n            \"doctor\": {\n                \"id\": 5,\n                \"name\": \"Dr. Sp Nain\",\n                \"specialization\": \"Neuro\",\n                \"userId\": 1,\n                \"createdAt\": \"2025-06-19T08:47:01.000Z\",\n                \"updatedAt\": \"2025-06-19T08:47:01.000Z\"\n            }\n        },\n        {\n            \"id\": 3,\n            \"patientId\": 2,\n            \"doctorId\": 5,\n            \"createdAt\": \"2025-06-19T08:51:26.000Z\",\n            \"updatedAt\": \"2025-06-19T08:51:26.000Z\",\n            \"patient\": {\n                \"id\": 2,\n                \"name\": \"Maria\",\n                \"age\": 25,\n                \"disease\": \"Fever\",\n                \"userId\": 1,\n                \"createdAt\": \"2025-06-19T08:42:35.000Z\",\n                \"updatedAt\": \"2025-06-19T08:42:35.000Z\"\n            },\n            \"doctor\": {\n                \"id\": 5,\n                \"name\": \"Dr. Sp Nain\",\n                \"specialization\": \"Neuro\",\n                \"userId\": 1,\n                \"createdAt\": \"2025-06-19T08:47:01.000Z\",\n                \"updatedAt\": \"2025-06-19T08:47:01.000Z\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "patient-doctor mapping by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/mappings/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mappings",
								"1"
							]
						},
						"description": "### API Endpoint: Get Mapping by ID\n\nThis endpoint retrieves the mapping details for a specific patient and their associated doctors based on the provided patient ID.\n\n#### Request\n\n- **Method:** GET\n    \n- **URL:** `{{baseUrl}}/api/mappings/{id}`\n    \n\n#### Path Parameters\n\n- `id` (required): The unique identifier for the mapping you wish to retrieve. In this example, the ID is `1`.\n    \n\n#### Response\n\nOn a successful request, the API returns a JSON object with the following structure:\n\n- **patientId**: A string representing the unique identifier for the patient. This field may be empty if no patient is associated.\n    \n- **doctors**: An array of doctor objects, each containing:\n    \n    - **id**: A unique identifier for the doctor.\n        \n    - **name**: The name of the doctor.\n        \n    - **specialization**: The medical specialty of the doctor.\n        \n    - **userId**: The user ID associated with the doctor.\n        \n    - **createdAt**: A timestamp indicating when the doctor record was created.\n        \n    - **updatedAt**: A timestamp indicating when the doctor record was last updated.\n        \n\n#### Example Response\n\n``` json\n{\n  \"patientId\": \"\",\n  \"doctors\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"specialization\": \"\",\n      \"userId\": 0,\n      \"createdAt\": \"\",\n      \"updatedAt\": \"\"\n    }\n  ]\n}\n\n ```\n\nThis response structure allows consumers of the API to easily understand the patient-doctor mapping and the details of the associated doctors."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/mappings/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mappings",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "328"
								},
								{
									"key": "ETag",
									"value": "W/\"148-/SrTbH3kx1fJBOnBpLKJ4RPkIik\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:53:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"patientId\": \"1\",\n    \"doctors\": [\n        {\n            \"id\": 2,\n            \"name\": \"Dr. Alice Gupta\",\n            \"specialization\": \"Cardiologist\",\n            \"userId\": 1,\n            \"createdAt\": \"2025-06-19T08:24:12.000Z\",\n            \"updatedAt\": \"2025-06-19T08:24:12.000Z\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Dr. Sp Nain\",\n            \"specialization\": \"Neuro\",\n            \"userId\": 1,\n            \"createdAt\": \"2025-06-19T08:47:01.000Z\",\n            \"updatedAt\": \"2025-06-19T08:47:01.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/mappings/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mappings",
										"3"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "241"
								},
								{
									"key": "ETag",
									"value": "W/\"f1-C26H8ApbNqV7OyG64bKCOuFM4XM\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:54:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Patient not found\"\n}"
						}
					]
				},
				{
					"name": "delete patient-doctor mapping by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/mappings/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mappings",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/mappings/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mappings",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "44"
								},
								{
									"key": "ETag",
									"value": "W/\"2c-8mT12Yl9fqmf/eRF/JYWssc+fHc\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:55:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Doctor unassigned from patient\"\n}"
						},
						{
							"name": "error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/mappings/4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"mappings",
										"4"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "241"
								},
								{
									"key": "ETag",
									"value": "W/\"f1-JFsozgS8OjRB7+d9TGBOiltTSWA\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 08:56:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Mapping not found\"\n}"
						}
					]
				}
			]
		}
	]
}